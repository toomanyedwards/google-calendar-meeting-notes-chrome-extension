{"version":3,"sources":["ErrorsDialog.js","LazyTreeView.js","GoogleDriveTreeControl.js","SelectGoogleDriveResourceDialog.js","AddMeetingNotesDialog.js","AddingMeetingNotesDialog.js","chromeUtils.js","AddMeetingNotesButton.js","AddMeetingNotesButtonContainer.js","App.js","index.js"],"names":["ErrorsDialog","open","onClose","title","errors","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","map","error","DialogContentText","message","DialogActions","Button","onClick","color","autoFocus","useTreeItemStyles","makeStyles","theme","content","palette","text","secondary","borderTopRightRadius","spacing","borderBottomRightRadius","paddingRight","fontWeight","typography","fontWeightMedium","fontWeightRegular","expanded","label","labelRoot","display","alignItems","padding","labelIcon","marginRight","labelText","flexGrow","LazyTreeItem","props","classes","LabelIcon","labelInfo","bgColor","other","TreeItem","className","Typography","variant","style","root","group","LazyTreeView","loadChildNodes","onSelectionChanged","allowParentNodeSelection","onErrors","ROOT_NODE_ID","useState","nodeIdToNodeMap","Map","set","name","mayHaveChildren","treeData","setTreeData","React","setExpanded","selected","setSelected","setErrors","getNode","nodeId","get","isTreeInitialized","childrenLoaded","useEffect","a","addNodeChildren","loadRootChildren","handleErrors","parentNodeId","childNodes","console","log","JSON","stringify","parentNode","childNodeIds","childNode","push","nodeIdToChildNodeIdsMap","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","event","nodeIds","target","closest","expandingNodes","filter","x","includes","onNodeSelect","node","renderTreeItems","children","getChildNodeIds","Array","isArray","childNodeId","icon","key","length","position","width","justifyContent","CircularProgress","listGoogleDrive","folderId","mimeTypes","mimeTypeQuery","join","query","Promise","resolve","reject","chrome","runtime","sendMessage","type","listParams","orderBy","q","fields","response","filesList","GoogleDriveTreeControl","allowFolderSelection","fileMimeTypes","GOOGLE_DRIVE_FOLDER_MIME_TYPE","concat","loadFolderChildNodes","folderListing","folderChild","isFolder","mimeType","FolderIcon","DocumentIcon","SelectGoogleDriveResourceDialog","setOpen","onSelectionConfirmed","selectionInfo","setSelectionInfo","maxWidth","toString","disabled","AddMeetingNotesDialog","userDomain","defaultSharingLevel","defaultNotesTemplateInfo","defaultNotesDestinationInfo","addMeetingNotes","isSelectNotesTemplateDialogOpen","setSelectNotesTemplateDialogOpen","isSelectNotesDestinationDialogOpen","setSelectNotesDestinationDialogOpen","sharingLevel","setSharingLevel","notesTemplateInfo","setNotesTemplateInfo","notesDestinationInfo","setNotesDestinationInfo","fullWidth","Tooltip","TextField","size","value","InputProps","readOnly","Box","my","FormLabel","component","RadioGroup","aria-label","onChange","FormControlLabel","control","Radio","sharing","AddingMeetingNotesDialog","getChromeStorageSyncData","keys","storage","sync","setChromeStorageSyncData","data","removeAddDescriptionDiv","addDescriptionDiv","nodeList","document","querySelectorAll","getAddDescriptionDiv","remove","addNotesDocToMeetingDescription","meetingDescriptionEl","meetingNotesDocUrl","insertAdjacentHTML","StyledAddMeetingNotesButton","styled","getMeetingTitle","isAddMeetingNotesDialogOpen","setAddMeetingNotesDialogOpen","isErrorsDialogOpen","setErrorsDialogOpen","addingMeetingNotes","setAddingMeetingNotes","config","setConfig","defaultConfig","initializeDefaults","openAddMeetingNotesDialog","meetingTitle","meetingNotesTitle","meetingNotesTemplate","meetingNotesFolder","meetingNotesSharing","handleAddMeetingNotes","meetingNotesConfig","class","AddMeetingNotesButtonContainer","buttonContainerId","aria-hidden","alt","src","getURL","App","getMeetingNotesButtonContainerReactInjectionEl","getElementById","getUserDomain","userEmail","textContent","substring","lastIndexOf","getAddMeetingNotesButtonContainerEl","hasMeetingNotes","getAttribute","observer","MutationObserver","mutations","forEach","meetingNotesButtonContainerReactInjectionElParent","getMeetingDescriptionEl","isAddMeetingNotesButtonVisible","hideAddMeetinNotesButton","showAddMeetinNotesButton","eventDetailsTabPanelEl","injectionEl","ReactDOM","render","StrictMode","insertReactAddMeetingNotesButtonContainer","window","addEventListener","keyCode","preventDefault","stopImmediatePropagation","cancelBubble","querySelector","observe","childList","subtree"],"mappings":"4aAQe,SAASA,EAAT,GAA+D,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAAiC,IAAxBC,aAAwB,MAAlB,QAAkB,EAATC,EAAS,EAATA,OAElE,OACE,kBAACC,EAAA,EAAD,CACIJ,KAAMA,EACNC,QAASA,EACTI,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsBN,GACtC,kBAACO,EAAA,EAAD,KAEMN,EAAOO,KACL,SAAAC,GAAK,OACL,kBAACC,EAAA,EAAD,CAAmBJ,GAAG,4BACnBG,EAAME,aAMjB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASf,EAASgB,MAAM,UAAUC,WAAS,GAAnD,Q,0FCjBJC,EAAoBC,aACxB,SAAAC,GAAK,MACH,CACEC,QAAS,CACPL,MAAOI,EAAME,QAAQC,KAAKC,UAC1BC,qBAAsBL,EAAMM,QAAQ,GACpCC,wBAAyBP,EAAMM,QAAQ,GACvCE,aAAcR,EAAMM,QAAQ,GAC5BG,WAAYT,EAAMU,WAAWC,iBAC7B,gBAAiB,CACfF,WAAYT,EAAMU,WAAWE,oBAGjCC,SAAU,GACVC,MAAO,CACLL,WAAY,UACZb,MAAO,WAETmB,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,QAASlB,EAAMM,QAAQ,GAAK,IAE9Ba,UAAW,CACTC,YAAapB,EAAMM,QAAQ,IAE7Be,UAAW,CACTZ,WAAY,UACZa,SAAU,OAMZC,EAAe,SAACC,GACpB,IAAMC,EAAU3B,IAEduB,EAMEG,EANFH,UACWK,EAKTF,EALFL,UACAQ,EAIEH,EAJFG,UACA/B,EAGE4B,EAHF5B,MACAgC,EAEEJ,EAFFI,QACGC,EARyB,YAS1BL,EAT0B,yDAW9B,OACE,kBAACM,EAAA,EAAD,eAEEhB,MACE,yBAAKiB,UAAWN,EAAQV,WACtB,kBAACW,EAAD,CAAW9B,MAAM,UAAUmC,UAAWN,EAAQN,YAC9C,kBAACa,EAAA,EAAD,CAAYC,QAAQ,QAAQF,UAAWN,EAAQJ,WAC5CA,GAEH,kBAACW,EAAA,EAAD,CAAYC,QAAQ,UAAUrC,MAAM,WACjC+B,IAIPO,MAAO,CACL,oBAAqBtC,EACrB,uBAAwBgC,GAE1BH,QAAS,CACPU,KAAMV,EAAQU,KACdlC,QAASwB,EAAQxB,QACjBY,SAAUY,EAAQZ,SAClBuB,MAAOX,EAAQW,MACftB,MAAOW,EAAQX,QAEbe,KAiNKQ,EAzMM,SAAC,GAAoF,IAAnFC,EAAkF,EAAlFA,eAAgBC,EAAkE,EAAlEA,mBAAkE,IAA9CC,gCAA8C,SAAdC,EAAc,EAAdA,SACnFC,EAAa,oBADoF,EAGvEC,mBAC9B,CACEC,iBAAiB,IAAIC,KAAMC,IACzBJ,EACA,CACEvD,GAAIuD,EACJK,KAAML,EACNM,iBAAiB,MAV8E,mBAGhGC,EAHgG,KAGtFC,EAHsF,OAgBvEC,IAAMR,SAAS,IAhBwD,mBAgBhG9B,EAhBgG,KAgBtFuC,EAhBsF,OAkBvED,IAAMR,SAAS,IAlBwD,mBAkBhGU,EAlBgG,KAkBtFC,EAlBsF,OAmB3EX,mBAAS,IAnBkE,mBAmBhG7D,EAnBgG,KAmBxFyE,EAnBwF,KAsBjGC,EAAU,SAACC,GACf,OAAOR,EAASL,gBAAgBc,IAAID,IAWhCE,EAAoB,WACxB,OAJOH,EAAQd,GAIMkB,gBAGvBC,qBACE,WAAM,4CACJ,sBAAAC,EAAA,yDACMH,IADN,gCAEUI,EAAgBrB,GAF1B,4CADI,uBAAC,WAAD,wBAMJsB,KACA,IAGJ,IAAMC,EAAe,SAACnF,GACpByE,EAAUzE,GACV2D,EAAS3D,IAGLiF,EAAe,uCAAG,WAAOG,GAAP,uBAAAJ,EAAA,kEAKNI,IAAiBxB,EALX,gCAK+BJ,IAL/B,0DAKsDA,EAAe4B,GALrE,2BAKpBC,EALoB,8DAQpBC,QAAQC,IAAR,iDAAsDC,KAAKC,UAAL,QACtDN,EAAa,EAAD,IATQ,kCAahBO,EAAahB,EAAQU,IAChBN,gBAAiB,GAEtBhB,EAAkB,IAAIC,IAAII,EAASL,kBACzBE,IAAIoB,EAAcM,GAE5BC,EAAe,GACrBN,EAAW9E,KACT,SAAAqF,GACI9B,EAAgBE,IAAI4B,EAAUvF,GAAIuF,GAClCD,EAAaE,KAAKD,EAAUvF,QAI5ByF,EAA0B,IAAI/B,IAAII,EAAS2B,0BAEzB9B,IAAIoB,EAAcO,GAE1CvB,EACI,CACEN,kBACAgC,4BAlCgB,kBAsCfT,GAtCe,0DAAH,sDAoHrB,OACGR,IAgBG,kBAACkB,EAAA,EAAD,CACEC,oBAAqB,kBAAC,IAAD,MACrBC,kBAAmB,kBAAC,IAAD,MACnBC,aAzCa,SAACC,EAAOC,GAI3B,IAAI1C,GAA6ByC,EAAME,OAAOC,QAAQ,8BAAtD,CAIA,IAAMC,EAAiBH,EAAQI,QAAO,SAAAC,GAAC,OAAK1E,EAAS2E,SAASD,MAG9D,GAFAnC,EAAY8B,GAERG,EAAe,GAAI,CACrB,IAAM5B,EAAS4B,EAAe,GACjB7B,EAAQC,GAEZG,gBACPG,EAAgBN,MA0BdgC,aAhGa,SAACR,EAAOxB,GAC3B,IAAMiC,EAAOlC,EAAQC,GAGjBjB,GAA4ByC,EAAME,OAAOC,QAAQ,+BAMlDM,EAAK1C,kBAAoBR,IAKxBa,IAAaI,GACbH,EAAY,IACZf,EAAmB,QAEnBe,EAAYG,GACZlB,EAAmBmD,MA6EjB7E,SAAUA,EACVwC,SAAUA,GA1EM,SAAlBsC,EAAmBlC,GAEvB,IAAIE,IACF,OAAO,KAGT,IAEIiC,EAFEF,EAAOlC,EAAQC,GAGrB,GAAIiC,EAAK1C,gBACP,GAAG0C,EAAK9B,eAAgB,CACtB,IAAMa,EAxGY,SAAChB,GACvB,OAAOR,EAAS2B,wBAAwBlB,IAAID,GAuGnBoC,CAAgBpC,GACrCmC,EAAWE,MAAMC,QAAQtB,GAAgBA,EAAapF,KAAI,SAAC2G,GAAD,OAAiBL,EAAgBK,MAAgB,UAG3GJ,EAAW,2CAIhB,OAAGnC,IAAWf,EACJkD,EAGL,kBAAC,EAAD,CAAczE,UAAWuE,EAAKO,KAAMC,IAAKzC,EAAQA,OAAQA,EAAQpC,UAAWqE,EAAK3C,MAC9E6C,GAoDAD,CAAgBjD,IAtBA,IAAlB5D,EAAOqH,OACN,yBAAKjE,MAAO,CACVkE,SAAU,WACVpF,QAAQ,OACRqF,MAAM,OACNC,eAAgB,WAEhB,kBAACC,EAAA,EAAD,OAGF,+B,kCClOJC,EAAkB,WAAiC,IAAhCC,EAA+B,uDAAtB,OAAQC,EAAc,uCACpDtC,QAAQC,IAAR,qCAA0CoC,EAA1C,uBAAiEnC,KAAKC,UAAUmC,KAGhF,IAAMC,EAAiBD,GAAiC,GAApBA,EAAUP,OAAc,aAAeO,EAAUE,KAAK,mBAAqB,KAAK,GACpHxC,QAAQC,IAAR,0CAA+CsC,IAC/C,IAAME,EAAQ,WAAIJ,EAAJ,mCAAgDC,EAAU,SAAD,OAAUC,EAAV,KAA2B,IAIlG,OAFAvC,QAAQC,IAAR,kCAAuCC,KAAKC,UAAUsC,KAE/C,IAAIC,SACX,SAACC,EAASC,GACRC,OAAOC,QAAQC,YACb,CACEC,KAAM,kBACNC,WAAY,CACVC,QAAQ,eACRC,EAAEV,EAEFW,OAAQ,8CAGZ,SAAAC,GACI,GAAGA,EAASC,UACVX,EAAQU,EAASC,eACZ,CACL,IAAM5I,EAAS2I,EAAS3I,OACxBsF,QAAQC,IAAR,kCAAuCC,KAAKC,UAAUzF,KACtDkI,EAAOlI,GAETiI,EAAQU,UAQLE,EA9EgB,SAAC,GAAkF,IAAjFpF,EAAgF,EAAhFA,mBAAgF,IAA5DqF,4BAA4D,aAAhCC,qBAAgC,MAAlB,GAAkB,EAAdpF,EAAc,EAAdA,SAAc,EAEnFE,mBAAS,IAF0E,mBAExG7D,EAFwG,KAEhGyE,EAFgG,KAIzGuE,EAAgC,qCAChCpB,EAAY,CAACoB,GAA+BC,OAAOF,GAEnDG,EAAoB,uCAAG,0CAAAlE,EAAA,6DAAQ2C,EAAR,+BAAiB,OAAjB,SACCD,EAAgBC,EAAUC,GAD3B,cACrBuB,EADqB,yBAGpBA,EAAc5I,KACnB,SAAA6I,GACE,IAAMC,EAAWD,EAAYE,WAAaN,EAC1C,MAAO,CACL3I,GAAI+I,EAAY/I,GAChB4D,KAAMmF,EAAYnF,KAClBkD,KAAMkC,EAASE,IAAWC,IAC1BtF,gBAAiBmF,OAVI,2CAAH,qDAsB1B,OACmB,GAAhBrJ,EAAOqH,OACN,8BAEA,kBAAC,EAAD,CAAcxH,MAAI,EAAC4D,mBAAoBA,EAAoBD,eAAgB0F,EAAsBxF,yBAA0BoF,EAAsBnF,SAVhI,SAAC3D,GACpBsF,QAAQC,IAAR,0CAA+CC,KAAKC,UAAUzF,GAA9D,MACAyE,EAAUzE,GACV2D,EAAS3D,OCsDEyJ,EAzEyB,SAAC,GAAgG,IAA/F5J,EAA8F,EAA9FA,KAAM6J,EAAwF,EAAxFA,QAASC,EAA+E,EAA/EA,qBAAsB5J,EAAyD,EAAzDA,MAAyD,IAAlD+I,4BAAkD,aAAtBC,qBAAsB,MAAR,GAAQ,IAC5F1E,IAAMR,SAAS,MAD6E,mBAC/H+F,EAD+H,KAChHC,EADgH,OAE1GxF,IAAMR,SAAS,IAF2F,mBAE/H7D,EAF+H,KAEvHyE,EAFuH,KAyCtI,OACE,6BACE,kBAAC7E,EAAD,CAAcC,KAAuB,GAAjBG,EAAOqH,OAAatH,MAAM,oCAAoCC,OAAQA,EAAQF,QAPtE,WAC9B4J,GAAQ,GACRjF,EAAU,OAOR,kBAACxE,EAAA,EAAD,CAAQ6J,SAAS,KAAKjK,KAAMA,EAAOK,kBAAgB,qBACjD,kBAACE,EAAA,EAAD,CAAaC,GAAG,qBAAqBN,GAErC,kBAACO,EAAA,EAAD,KACE,kBAAC,EAAD,CACED,GAAG,IACH4D,KAAK,eACLpE,KAAMA,EACN4D,mBAnCiB,SAACmG,GAC1BtE,QAAQC,IAAR,8BAAmCC,KAAKC,UAAUmE,KAClDC,EAAiBD,IAkCTd,qBAAsBA,EACtBC,cAAeA,EACfpF,SAjCW,SAAC3D,GACpBsF,QAAQC,IAAR,mDAAwDvF,EAAO+J,aAE/D/J,EAAOO,KACL,SAAAC,GACE8E,QAAQC,IAAR,kDAAuD/E,EAAMuJ,gBAKjEtF,EAAU,CAAC,CAAC/D,QAAQ,6BA2BhB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAzDK,WACjB6I,GAAQ,IAwD2B5I,MAAM,WAArC,UACA,kBAACF,EAAA,EAAD,CAAQC,QAtDiB,WAC/B8I,EACE,CACEtJ,GAAIuJ,EAAcvJ,GAClB4D,KAAM2F,EAAc3F,OAGxByF,GAAQ,IA+CyCM,UAAaJ,EAAe9I,MAAM,WAA7E,c,kBCqFKmJ,EA/Ie,SAAC,GAA8H,IAA7HC,EAA4H,EAA5HA,WAAYC,EAAgH,EAAhHA,oBAAqBC,EAA2F,EAA3FA,yBAA0BC,EAAiE,EAAjEA,4BAA6BxK,EAAoC,EAApCA,KAAM6J,EAA8B,EAA9BA,QAASY,EAAqB,EAArBA,gBAAqB,EAC5EzG,oBAAS,GADmE,mBACjJ0G,EADiJ,KAChHC,EADgH,OAEtE3G,oBAAS,GAF6D,mBAEjJ4G,EAFiJ,KAE7GC,EAF6G,OAGhH7G,mBAAS,IAHuG,mBAGjJ8G,EAHiJ,KAGnIC,EAHmI,OAItG/G,mBAAS,MAJ6F,mBAIjJgH,EAJiJ,KAI9HC,EAJ8H,OAKhGjH,mBAAS,MALuF,mBAKjJkH,EALiJ,KAK3HC,EAL2H,KAWxJjG,qBACI,WACI6F,EAAgBT,KAEpB,CAACA,IAGLpF,qBACI,WACI+F,EAAqBV,KAEzB,CAACA,IAGLrF,qBACI,WACIiG,EAAwBX,KAE5B,CAACA,IAsCL,OACI,6BACI,kBAAC,EAAD,CACIxK,KAAM0K,EACNb,QAASc,EACTb,qBAjBwB,SAACkB,GACjCC,EAAqBD,GACrBvF,QAAQC,IAAR,uCAA4CC,KAAKC,UAAUoF,MAgBnD9B,cAAe,CAAC,wCAChBhJ,MAAM,iCAEV,kBAAC,EAAD,CACIF,KAAM4K,EACNf,QAASgB,EACTf,qBAlB2B,SAACoB,GACpCC,EAAwBD,GACxBzF,QAAQC,IAAR,0CAA+CC,KAAKC,UAAUsF,MAiBtDhL,MAAM,oCACN+I,sBAAsB,IAE1B,kBAAC7I,EAAA,EAAD,CAASJ,KAAMA,EAAOK,kBAAgB,oBAAoB+K,WAAW,EAAMnB,SAAY,MACnF,kBAAC1J,EAAA,EAAD,CAAaC,GAAG,qBAAhB,qBACA,kBAACC,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,wBAGA,kBAACyK,EAAA,EAAD,CAASnL,MAAO8K,EAAkBA,EAAkB5G,KAAK,qBACrD,kBAACkH,EAAA,EAAD,CACI9K,GAAG,gBACH+K,KAAK,SACLH,WAAS,EAETI,MAAOR,EAAkBA,EAAkB5G,KAAK,oBAChDd,QAAQ,WAERmI,WAAY,CACRC,UAAU,GAEd1K,QAtDuB,WAC3C2J,GAAiC,OAwDrB,kBAACgB,EAAA,EAAD,CAAKC,GAAI,GACT,kBAAChL,EAAA,EAAD,2BAIA,kBAAC0K,EAAA,EAAD,CACI9K,GAAG,mBACH8C,QAAQ,WACRkI,MAAON,EAAqBA,EAAqB9G,KAAK,oBACtDgH,WAAS,EACTK,WAAY,CACRC,UAAU,GAEd1K,QAlE8B,WAC9C6J,GAAoC,OAsExB,kBAACc,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,CAAWC,UAAU,UAArB,WACA,kBAACC,EAAA,EAAD,CAAYR,KAAK,QAAQS,aAAW,UAAU5H,KAAK,UAAU6H,SArHhD,SAAC3F,GAC9ByE,EAAgBzE,EAAME,OAAOgF,QAoHoFA,MAAOV,GAEpG,kBAACoB,EAAA,EAAD,CAAkBV,MAAM,UAAUW,QAAS,kBAACC,EAAA,EAAD,CAAOb,KAAK,UAAWpJ,MAAM,YACxE,kBAACwJ,EAAA,EAAD,CAAKC,IAAK,GACV,kBAACM,EAAA,EAAD,CAAkBV,MAAM,SAASW,QAAS,kBAACC,EAAA,EAAD,CAAOb,KAAK,UAAWpJ,MAAK,kBAAakI,EAAb,QAEtE,kBAAC6B,EAAA,EAAD,CAAkBV,MAAM,SAASW,QAAS,kBAACC,EAAA,EAAD,CAAOb,KAAK,UAAWpJ,MAAM,cAIlF,kBAACrB,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAQC,QAvGH,WACjB6I,GAAQ,IAsGmC5I,MAAM,WAArC,UACA,kBAACF,EAAA,EAAD,CAAQoJ,UAAaa,IAAwBE,EAAsBlK,QArGxC,WACvCyJ,EACQ,CACI4B,QAAQ,CACJvB,eACAT,cAEJW,oBACAE,0BA6FgHjK,MAAM,WAAtH,iBC1GLqL,EA1CkB,SAAC,GAAY,IAAXtM,EAAU,EAAVA,KAC/B,OACI,kBAACI,EAAA,EAAD,CAAQ6J,SAAS,KAAKjK,KAAMA,EAAOK,kBAAgB,qBAC/C,kBAACI,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CAAmBJ,GAAG,4BAAtB,2BAGA,yBAAK+C,MAAO,CACZkE,SAAU,WACVpF,QAAQ,OACRqF,MAAM,OACNC,eAAgB,WAIZ,kBAACC,EAAA,EAAD,UChBH2E,EAA2B,SAACC,GACrC,OAAO,IAAIrE,SACP,SAAAC,GACIE,OAAOmE,QAAQC,KAAK3H,IAChByH,GACA,SAAA1D,GACIrD,QAAQC,IAAR,wCAA6CC,KAAKC,UAAUkD,KAC5DV,EAAQU,UAOf6D,EAA2B,SAAAC,GACpC,OAAO,IAAIzE,SACP,SAAAC,GACIE,OAAOmE,QAAQC,KAAKvI,IAChByI,GACA,WACInH,QAAQC,IAAR,oBAAyBkH,IACzBxE,W,snBClBpB,IAwJMyE,EAA0B,WAC9B,IAAMC,EATqB,WAC3B,IAAIC,EAAWC,SAASC,iBAAiB,wBACzC,GAAGF,GAAYA,EAAS,GAEpB,OADAtH,QAAQC,IAAR,eAAoBC,KAAKC,UAAUmH,EAAS,MACrCA,EAAS,GAKMG,GAEvBJ,IACCrH,QAAQC,IAAR,6BAAkCoH,IAClCA,EAAkBK,WAIlBC,EAAkC,SAACC,EAAsBC,GAC7DT,IAEAQ,EAAqBE,mBAAmB,aAAxC,gDACyCD,EADzC,mCACsFA,EADtF,eAiCaE,GA1BqBC,aA3KN,SAAC,GAAoE,IAAnErK,EAAkE,EAAlEA,UAAWiH,EAAuD,EAAvDA,WAAYgD,EAA2C,EAA3CA,qBAAsBK,EAAqB,EAArBA,gBAAqB,EAC5BlJ,IAAMR,UAAS,GADa,mBACzF2J,EADyF,KAC5DC,EAD4D,OAEpEpJ,IAAMR,SAAS,IAFqD,mBAEzF7D,EAFyF,KAEjFyE,EAFiF,OAG9CJ,IAAMR,UAAS,GAH+B,mBAGzF6J,EAHyF,KAGrEC,EAHqE,OAI5CtJ,IAAMR,UAAS,GAJ6B,mBAIzF+J,EAJyF,KAIrEC,EAJqE,OAKpExJ,IAAMR,SAAS,IALqD,mBAKzFiK,EALyF,KAKjFC,EALiF,KAOhGhJ,qBACE,YAC0B,uCAAG,4BAAAC,EAAA,sEACGoH,IADH,QACnB4B,EADmB,QAEP9B,QAWhB6B,EACEC,GAVFD,EACE,CACE7B,QAAS,CACPvB,aAAa,UACbT,WAAYA,KARK,2CAAH,qDAkBxB+D,KACA,IAGJ,IAAMC,EAAyB,uCAAG,sBAAAlJ,EAAA,sDAChCM,QAAQC,IAAI,+BAeZkI,GAA6B,GAhBG,2CAAH,qDAmBzBnD,EAAkB,SAAC,GAAwD,IAAvD4B,EAAsD,EAAtDA,QAASrB,EAA6C,EAA7CA,kBAAmBE,EAA0B,EAA1BA,qBAC9CoD,EAAeZ,IACrB,OAAO,IAAIvF,SACT,SAACC,EAASC,GACRC,OAAOC,QAAQC,YACb,CACEC,KAAM,WACN8F,kBAAmBD,EAAe,SAClCE,qBAAsBxD,EACtByD,mBAAoBvD,EAKpBwD,oBAAoBrC,IAEtB,SAAAvD,GAGI,GAFArD,QAAQC,IAAI,yCAA0CoD,GAEnDA,EAASwE,mBAERF,EAAgCC,EAAsBvE,EAASwE,wBAC5D,CACL,IAAMnN,EAAS2I,EAAS3I,OACxBsF,QAAQC,IAAR,kCAAuCC,KAAKC,UAAUzF,KACtDA,EAAOO,KACL,SAAAC,GACE8E,QAAQC,IAAR,sCAA2C/E,EAAMuJ,gBAIrD7B,EAAOlI,GAETiI,EAAQU,UASd6F,EAAqB,uCAAG,WAAOC,GAAP,SAAAzJ,EAAA,6DAC5BM,QAAQC,IAAR,2BACAkI,GAA6B,GAC7BnI,QAAQC,IAAR,2BACAsI,GAAsB,GACtBvI,QAAQC,IAAR,2BAL4B,kBAOpB+E,EAAgBmE,GAPI,OAS1BjC,EAAyBiC,GATC,kDAY1BhK,EAAU,EAAD,IACTa,QAAQC,IAAR,wCAA6CC,KAAKC,UAAL,QAC7CoI,GAAsB,GACtBvI,QAAQC,IAAR,2BAEAoI,GAAoB,GACpBrI,QAAQC,IAAR,2BAlB0B,yBAqB1BsI,GAAsB,GArBI,6EAAH,sDA6B3B,OACE,6BACE,4BACExN,GAAG,2BACHQ,QAASqN,EACTQ,MAAOzL,GAHT,qBAKA,kBAAC,EAAD,CAA0BpD,KAAM+N,IAChC,kBAAChO,EAAD,CAAcG,MAAO,+BAAgCF,KAAM6N,EAAoB5N,QAZnD,WAC9B6N,GAAoB,IAW+F3N,OAAQA,IACzH,kBAAC,EAAD,CACEmK,oBAAqB2D,EAAO5B,QAAQ4B,EAAO5B,QAAQvB,aAAa,GAChEP,yBAA0B0D,EAAOjD,kBACjCR,4BAA6ByD,EAAO/C,qBACpCb,WAAYA,EACZrK,KAAM2N,EACN9D,QAAS+D,EACTnD,gBAAiBkE,OAkCWlB,CAAH,KChKlBqB,GAdwB,SAAAjM,GAAK,OACxC,yBAAKrC,GAAIqC,EAAMkM,kBAAmBF,MAAM,UACpC,yBAAKG,cAAY,OAAOH,MAAM,SAC1B,0BAAMA,MAAM,gBAAgBG,cAAY,QACpC,6BACI,yBAAKC,IAAI,GAAGD,cAAY,OAAOE,IAAK5G,OAAOC,QAAQ4G,OAAO,sBAAuBN,MAAM,cAInG,yBAAKA,MAAM,SACP,kBAAC,GAA0BhM,MCLxBuM,I,OAPH,SAAAvM,GACV,OACE,kBAAC,GAAmCA,KCYlCwM,GAAiD,WACrD,OAAOrC,SAASsC,eARwC,sDAepDC,GAAgB,WACpB,IAAMC,EAJCxC,SAASsC,eAAe,aAAaG,YAK5C,OAAOD,EAAUE,UAAUF,EAAUG,YAAY,KAAK,IAqBlDC,GAAsC,WAC1C,OAAO5C,SAASsC,eAtC4B,0CAyCxCO,GAAkB,WACtB,IAAI9C,EAAWC,SAASC,iBAAiB,8BACzC,SAAGF,IAAYA,EAAS,KAOpBW,GAAkB,WACtB,OAAOV,SAASsC,eAAe,SAASQ,aAAa,uBAuBnDC,GAAW,IAAIC,kBACjB,SAACC,GACGA,EAAUC,SACR,WAII,IAzD+CC,EAyDzC9C,EAlBc,WAC9B,IAAIN,EAAWC,SAASC,iBAAiB,qBACzC,GAAGF,GAAYA,EAAS,GACpB,OAAOA,EAAS,GAemBqD,GAG7B,GAAKf,KAqBCQ,MAAqBQ,KACrBC,KACQT,MAAsBQ,MAC9BE,SAxBkD,CAGtD,IAAMC,EArDXxD,SAASsC,eAAe,mBAwDnB,GAAIkB,GAA0BnD,EAAsB,CAGlD5H,QAAQC,IAAR,kBAAuB6J,OArEoBY,EAwE8DK,EAvEvH/K,QAAQC,IAAR,qDAEAyK,EAAkD5C,mBAChD,aADF,mBA5BwD,oDA4BxD,SA2BgD,SAACkD,EAAapD,GAC9DqD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,CAAKvD,qBAAsBA,EAAsBhD,WAAYkF,KAAiB7B,gBAAiBA,GAAiBqB,kBAzDxE,2CA2D1C0B,GAwCYI,CACExB,KACAhC,WAeZgD,GAAiC,WACrC,MAA8D,QAAvDT,KAAsCrM,MAAMlB,SAG/CiO,GAA2B,WAC/BV,KAAsCrM,MAAMlB,QAAU,QAGlDkO,GAA2B,WAC/BX,KAAsCrM,MAAMlB,QAAU,IASxDyO,OAAOC,iBAAiB,WAAW,SAASzK,GACnB,KAAlBA,EAAM0K,UACP1K,EAAM2K,iBACN3K,EAAM4K,2BACN5K,EAAM6K,cAAe,MAEtB,GAGL,IAAM3K,GAASwG,SAASoE,cAAc,QAQtCrB,GAASsB,QAAQ7K,GAPF,CAAE8K,WAAU,EAAMC,SAAQ,K","file":"static/js/main.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ErrorsDialog({open, onClose, title=\"Error\", errors}) {\n  \n  return (\n    <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          {\n              errors.map(\n                error => (\n                <DialogContentText id=\"alert-dialog-description\">\n                  {error.message}\n                </DialogContentText>\n                )\n              )\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Icons\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\n\nconst useTreeItemStyles = makeStyles(\n  theme => (\n    {\n      content: {\n        color: theme.palette.text.secondary,\n        borderTopRightRadius: theme.spacing(2),\n        borderBottomRightRadius: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        fontWeight: theme.typography.fontWeightMedium,\n        \"$expanded > &\": {\n          fontWeight: theme.typography.fontWeightRegular\n        }\n      },\n      expanded: {},\n      label: {\n        fontWeight: \"inherit\",\n        color: \"inherit\"\n      },\n      labelRoot: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0.5, 0)\n      },\n      labelIcon: {\n        marginRight: theme.spacing(1)\n      },\n      labelText: {\n        fontWeight: \"inherit\",\n        flexGrow: 1\n      }\n    }\n  )\n);\n\nconst LazyTreeItem = (props) => {\n  const classes = useTreeItemStyles();\n  const {\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    color,\n    bgColor,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      \n      label={\n        <div className={classes.labelRoot}>\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\n          <Typography variant=\"body2\" className={classes.labelText}>\n            {labelText}\n          </Typography>\n          <Typography variant=\"caption\" color=\"inherit\">\n            {labelInfo}\n          </Typography>\n        </div>\n      }\n      style={{\n        \"--tree-view-color\": color,\n        \"--tree-view-bg-color\": bgColor\n      }}\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        group: classes.group,\n        label: classes.label\n      }}\n      {...other}\n    />\n  );\n}\n\n/**\n * Tree view that lazily loads child nodes as parent nodes are expanded\n */\nconst LazyTreeView = ({loadChildNodes, onSelectionChanged, allowParentNodeSelection=false, onErrors}) => {\n  const ROOT_NODE_ID=\"LazyTreeView_root\";\n     \n  const [treeData, setTreeData] = useState(\n    {\n      nodeIdToNodeMap: new Map().set(\n        ROOT_NODE_ID, \n        {\n          id: ROOT_NODE_ID,\n          name: ROOT_NODE_ID,\n          mayHaveChildren: true\n        }\n      )\n    }\n  );\n  // Array of ids of the expanded tree nodes\n  const [expanded, setExpanded] = React.useState([]);\n  // id of the selected node (if any)\n  const [selected, setSelected] = React.useState(\"\");\n  const [errors, setErrors] = useState([]);\n   \n  \n  const getNode = (nodeId) => {\n    return treeData.nodeIdToNodeMap.get(nodeId);\n  }\n\n  const getChildNodeIds = (nodeId) => {\n    return treeData.nodeIdToChildNodeIdsMap.get(nodeId);\n  } \n\n  const getRootNode = () => {\n    return getNode(ROOT_NODE_ID);\n  }\n\n  const isTreeInitialized = () => {\n    return getRootNode().childrenLoaded;\n  }\n\n  useEffect(\n    () => {\n      async function loadRootChildren() {\n        if(!isTreeInitialized()) {\n          await addNodeChildren(ROOT_NODE_ID)\n        }\n      }\n      loadRootChildren();\n    },[]\n  );\n\n  const handleErrors = (errors) => {\n    setErrors(errors);\n    onErrors(errors);\n  }\n\n  const addNodeChildren = async (parentNodeId) => {\n    \n    var childNodes;\n\n    try{\n      childNodes = (parentNodeId === ROOT_NODE_ID)?await loadChildNodes():await loadChildNodes(parentNodeId);\n    }\n    catch(errors) {\n      console.log(`LazyTreeView: addNodeChildren: Errors: ${JSON.stringify(errors)}`);\n      handleErrors(errors);\n      return;\n    }\n\n    const parentNode = getNode(parentNodeId);\n    parentNode.childrenLoaded = true;\n\n    const nodeIdToNodeMap = new Map(treeData.nodeIdToNodeMap);\n    nodeIdToNodeMap.set(parentNodeId, parentNode);\n\n    const childNodeIds = [];\n    childNodes.map( \n      childNode => {\n          nodeIdToNodeMap.set(childNode.id, childNode); \n          childNodeIds.push(childNode.id);\n        }\n    );\n\n    const nodeIdToChildNodeIdsMap = new Map(treeData.nodeIdToChildNodeIdsMap);\n\n    nodeIdToChildNodeIdsMap.set(parentNodeId, childNodeIds);\n\n    setTreeData(\n        {\n          nodeIdToNodeMap,\n          nodeIdToChildNodeIdsMap\n        }\n    );\n\n    return childNodes;\n  }\n\n  const onNodeSelect = (event, nodeId) => {\n    const node = getNode(nodeId);\n    \n    // Prevent clicking the expander icon from triggering a selecion\n    if (allowParentNodeSelection && event.target.closest('.MuiTreeItem-iconContainer')) {\n        return;\n    }\n\n    // Don't select the node if it may have children and parent node selection\n    // is not allowed\n    if(node.mayHaveChildren && !allowParentNodeSelection) {\n        return;\n    }\n\n    // Toggle selection of the node\n    if (selected === nodeId) {\n        setSelected(\"\");\n        onSelectionChanged(null);\n    } else {\n        setSelected(nodeId);\n        onSelectionChanged(node);\n    }\n}\n\n  const renderTreeItems = (nodeId) => {\n   \n    if(!isTreeInitialized()) {\n      return null;\n    }\n\n    const node = getNode(nodeId);\n\n    var children;\n    if (node.mayHaveChildren) {\n      if(node.childrenLoaded) {\n        const childNodeIds = getChildNodeIds(nodeId);\n        children = Array.isArray(childNodeIds) ? childNodeIds.map((childNodeId) => renderTreeItems(childNodeId)) : null;\n      }\n      else {\n        children = <div>Loading...</div>\n      }\n    }\n\n   if(nodeId === ROOT_NODE_ID) {\n      return children;\n    } else {\n      return (\n        <LazyTreeItem labelIcon={node.icon} key={nodeId} nodeId={nodeId} labelText={node.name}>\n          {children}\n        </LazyTreeItem>\n      );\n    }    \n  }\n\n  const onNodeToggle = (event, nodeIds) => {\n    // If we allow parent node selection, don't toggle if the node label was the source of the toggle.\n    // The expander icon only must be used in that situation since we don't want clicking\n    // on the node label to trigger both a toggle and selection.\n    if (allowParentNodeSelection && !event.target.closest('.MuiTreeItem-iconContainer')) {\n      return;\n    }\n    // Get the ids of the newly expanded nodes\n    const expandingNodes = nodeIds.filter(x => !expanded.includes(x));\n    setExpanded(nodeIds);\n\n    if (expandingNodes[0]) {\n      const nodeId = expandingNodes[0];\n      const node = getNode(nodeId);\n\n      if(!node.childrenLoaded) {\n        addNodeChildren(nodeId);\n      }\n    }\n  }\n\n  return (\n    !isTreeInitialized()?\n      (\n        (errors.length === 0)?\n          <div style={{\n            position: 'relative',\n            display:'flex',\n            width:\"100%\",\n            justifyContent: 'center'\n            }}>\n            <CircularProgress />\n          </div>\n          :\n          <div/>\n      )\n    :\n      (\n        <TreeView\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n          onNodeToggle={onNodeToggle}\n          onNodeSelect={onNodeSelect}\n          expanded={expanded}\n          selected={selected}\n        >\n          {renderTreeItems(ROOT_NODE_ID)}\n        </TreeView>\n      )\n  );\n}\n\nexport default LazyTreeView;","/*global chrome*/\n\nimport React, {useState} from \"react\";\n\nimport LazyTreeView from './LazyTreeView';\nimport DocumentIcon from '@material-ui/icons/Description';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nconst GoogleDriveTreeControl = ({onSelectionChanged, allowFolderSelection=false, fileMimeTypes=[], onErrors}) => {\n\n  const [errors, setErrors] = useState([]);\n\n  const GOOGLE_DRIVE_FOLDER_MIME_TYPE = \"application/vnd.google-apps.folder\";\n  const mimeTypes = [GOOGLE_DRIVE_FOLDER_MIME_TYPE].concat(fileMimeTypes);\n  \n  const loadFolderChildNodes = async  (folderId=\"root\") => {\n    const folderListing = await listGoogleDrive(folderId, mimeTypes);\n    \n    return folderListing.map(\n      folderChild => {\n        const isFolder = folderChild.mimeType === GOOGLE_DRIVE_FOLDER_MIME_TYPE;\n        return {\n          id: folderChild.id,\n          name: folderChild.name,\n          icon: isFolder?FolderIcon:DocumentIcon,\n          mayHaveChildren: isFolder\n        }\n      }\n    );\n  }\n\n  const handleErrors = (errors) => {\n    console.log(`GoogleDriveTreeControl: errors: ${JSON.stringify(errors)}}`);\n    setErrors(errors);\n    onErrors(errors)\n  }\n\n  return (\n    (errors.length !=0)?\n      <div/>\n    :\n      <LazyTreeView open onSelectionChanged={onSelectionChanged} loadChildNodes={loadFolderChildNodes} allowParentNodeSelection={allowFolderSelection} onErrors={handleErrors} />\n\n  );\n\n}\n\n\nconst listGoogleDrive = (folderId=\"root\", mimeTypes) => {\n    console.log(`listGoogleDrive: folderId: ${folderId} mimeTypes: ${JSON.stringify(mimeTypes)}`);\n\n\n    const mimeTypeQuery = (mimeTypes && mimeTypes.length != 0) ?\"mimeType='\" + mimeTypes.join(\"' or mimeType='\") + \"' \":\"\";\n    console.log(`listGoogleDrive: mimeTypeQuery: ${mimeTypeQuery}`);\n    const query = `'${folderId}' in parents and trashed=false` + (mimeTypes?` and (${mimeTypeQuery})`:\"\");\n\n    console.log(`listGoogleDrive: query: ${JSON.stringify(query)}`);\n\n    return new Promise(\n    (resolve, reject) => {\n      chrome.runtime.sendMessage(\n        {\n          type: \"listGoogleDrive\",\n          listParams: {\n            orderBy:\"folder, name\",\n            q:query,\n            //pageSize: 10,\n            fields: \"nextPageToken, files(id, name, mimeType)\"\n          }\n        }, \n        response => {           \n            if(response.filesList) {\n              resolve(response.filesList);\n            } else {\n              const errors = response.errors;\n              console.log(`listGoogleDrive errors: ${JSON.stringify(errors)}`);\n              reject(errors);\n            }\n            resolve(response);\n        }\n      )  \n    }\n  );\n}\n\n\nexport default GoogleDriveTreeControl;\n","/*global chrome*/\n\nimport React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ErrorsDialog from './ErrorsDialog.js'\n\n\nimport GoogleDriveTreeControl from './GoogleDriveTreeControl'\n\n  \nconst SelectGoogleDriveResourceDialog = ({open, setOpen, onSelectionConfirmed, title, allowFolderSelection=false, fileMimeTypes=[]}) => {  \n  const [selectionInfo, setSelectionInfo] = React.useState(null);\n  const [errors, setErrors] = React.useState([]);\n \n  const handleCancel = () => {\n      setOpen(false);\n  }\n\n  const handleSelectionConfirmed = () => {\n    onSelectionConfirmed(\n      {\n        id: selectionInfo.id,\n        name: selectionInfo.name\n      }\n    );\n    setOpen(false);\n  }\n    \n  const onSelectionChanged = (selectionInfo) => {\n    console.log(`onSelectionChanged: ${JSON.stringify(selectionInfo)}`);\n    setSelectionInfo(selectionInfo);\n  }\n  \n  const handleErrors = (errors) => {\n    console.log(`SelectGoogleDriveResourceDialog: errors: ${errors.toString()}`);  \n\n    errors.map(\n      error=> {\n        console.log(`SelectGoogleDriveResourceDialog: error: ${error.toString()}`);\n      }\n    );\n\n\n    setErrors([{message:\"Error reading drive\"}]);\n  }\n\n  const handleErrorsDialogClose = () => {\n    setOpen(false);\n    setErrors([]);\n  }\n\n  return (\n    <div>\n      <ErrorsDialog open={errors.length != 0} title=\"Error Selecting From Google Drive\" errors={errors} onClose={handleErrorsDialogClose}/>\n\n      <Dialog maxWidth=\"lg\" open={open}  aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n\n        <DialogContent>\n          <GoogleDriveTreeControl\n            id=\"1\" \n            name=\"Applications\" \n            open={open} \n            onSelectionChanged={onSelectionChanged} \n            allowFolderSelection={allowFolderSelection} \n            fileMimeTypes={fileMimeTypes}\n            onErrors={handleErrors}\n          />\n        </DialogContent>\n    \n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">Cancel</Button>\n          <Button onClick={handleSelectionConfirmed} disabled={!!!selectionInfo} color=\"primary\">Select</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n\n\n\n\nexport default SelectGoogleDriveResourceDialog;\n","import React, {useEffect, useState} from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SelectGoogleDriveResourceDialog from './SelectGoogleDriveResourceDialog';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\n\nconst AddMeetingNotesDialog = ({userDomain, defaultSharingLevel, defaultNotesTemplateInfo, defaultNotesDestinationInfo, open, setOpen, addMeetingNotes}) => {  \n    const [isSelectNotesTemplateDialogOpen, setSelectNotesTemplateDialogOpen] = useState(false);\n    const [isSelectNotesDestinationDialogOpen, setSelectNotesDestinationDialogOpen] = useState(false);\n    const [sharingLevel, setSharingLevel] = useState(\"\");\n    const [notesTemplateInfo, setNotesTemplateInfo] = useState(null);\n    const [notesDestinationInfo, setNotesDestinationInfo] = useState(null);\n      \n    const handleSharingLevelChange = (event) => {\n        setSharingLevel(event.target.value);\n    };\n\n    useEffect(\n        () => {\n            setSharingLevel(defaultSharingLevel);\n        }, \n        [defaultSharingLevel]\n    );\n\n    useEffect(\n        () => {\n            setNotesTemplateInfo(defaultNotesTemplateInfo);\n        }, \n        [defaultNotesTemplateInfo]\n    );\n\n    useEffect(\n        () => {\n            setNotesDestinationInfo(defaultNotesDestinationInfo);\n        }, \n        [defaultNotesDestinationInfo]\n    );\n\n    const handleCancel = () => {\n        setOpen(false);\n    }\n    const handleAddMeetingNotesButtonPressed = () => {\n        addMeetingNotes(\n                {\n                    sharing:{\n                        sharingLevel, \n                        userDomain\n                    }, \n                    notesTemplateInfo, \n                    notesDestinationInfo\n                }\n            );\n    }\n    const handleChangeNotesTemplateButtonPressed = () => {\n        setSelectNotesTemplateDialogOpen(true);\n    }\n\n    const handleChangeNotesDestinationButtonPressed = () => {\n        setSelectNotesDestinationDialogOpen(true);\n    }\n\n    const handleNotesTemplateSelected = (notesTemplateInfo) => {\n        setNotesTemplateInfo(notesTemplateInfo);\n        console.log(`handleNotesTemplateSelected: ${JSON.stringify(notesTemplateInfo)}`);\n        \n    }\n\n    const handleNotesDestinationSelected = (notesDestinationInfo) => {\n        setNotesDestinationInfo(notesDestinationInfo);\n        console.log(`handleNotesDestinationSelected: ${JSON.stringify(notesDestinationInfo)}`);\n        \n    }\n\n    return (\n        <div>\n            <SelectGoogleDriveResourceDialog \n                open={isSelectNotesTemplateDialogOpen} \n                setOpen={setSelectNotesTemplateDialogOpen} \n                onSelectionConfirmed={handleNotesTemplateSelected} \n                fileMimeTypes={[\"application/vnd.google-apps.document\"]}\n                title=\"Select a Notes Template File\"\n            />\n            <SelectGoogleDriveResourceDialog \n                open={isSelectNotesDestinationDialogOpen} \n                setOpen={setSelectNotesDestinationDialogOpen}\n                onSelectionConfirmed={handleNotesDestinationSelected} \n                title=\"Select a Notes Destination Folder\"\n                allowFolderSelection={true}\n            />\n            <Dialog  open={open}  aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth = {'xs'}>\n                <DialogTitle id=\"form-dialog-title\">Add Meeting Notes</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Notes Template:\n                    </DialogContentText>\n                    <Tooltip title={notesTemplateInfo?notesTemplateInfo.name:\"<Click to select>\"}>\n                        <TextField\n                            id=\"notesTemplate\"\n                            size=\"medium\"\n                            fullWidth\n                            \n                            value={notesTemplateInfo?notesTemplateInfo.name:\"<Click to select>\"}\n                            variant=\"outlined\"\n                            \n                            InputProps={{\n                                readOnly: true,\n                            }}\n                            onClick={handleChangeNotesTemplateButtonPressed}\n                        />\n                    </Tooltip>\n                    <Box my={3}>\n                    <DialogContentText>\n                        Notes Destination:\n                    </DialogContentText>\n                    \n                    <TextField\n                        id=\"notesDestination\"\n                        variant=\"outlined\"\n                        value={notesDestinationInfo?notesDestinationInfo.name:\"<Click to select>\"}\n                        fullWidth\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                        onClick={handleChangeNotesDestinationButtonPressed}\n                    />\n                 \n                 \n                    </Box>\n                    <Box my={2}>\n                        <FormLabel component=\"legend\">Sharing</FormLabel>\n                        <RadioGroup size=\"small\" aria-label=\"sharing\" name=\"sharing\" onChange={handleSharingLevelChange} value={sharingLevel} >\n                            {/* TODO: use shared constants for the values */}\n                            <FormControlLabel value=\"private\" control={<Radio size=\"small\"/>} label=\"Private\"/>\n                            <Box my={-1}>\n                            <FormControlLabel value=\"domain\" control={<Radio size=\"small\"/>} label={`Domain (${userDomain})`} />\n                            </Box>\n                            <FormControlLabel value=\"public\" control={<Radio size=\"small\"/>} label=\"Public\" />\n                        </RadioGroup>\n                    </Box>\n                </DialogContent>\n                 <DialogActions>\n                    <Button onClick={handleCancel} color=\"primary\">Cancel</Button>\n                    <Button disabled={!!!notesTemplateInfo || !!!notesDestinationInfo} onClick={handleAddMeetingNotesButtonPressed} color=\"primary\">Add Notes</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default AddMeetingNotesDialog;","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst AddingMeetingNotesDialog = ({open}) => {  \n    return (\n        <Dialog maxWidth=\"lg\" open={open}  aria-labelledby=\"form-dialog-title\">\n            <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n                Adding meeting notes...\n            </DialogContentText>\n            <div style={{\n            position: 'relative',\n            display:'flex',\n            width:\"100%\",\n            justifyContent: 'center'\n    \n            }}>\n        \n                <CircularProgress />\n            </div>\n        </DialogContent>\n        </Dialog>\n        \n    )\n    /*return \n    (<Dialog maxWidth=\"lg\" open={open}  aria-labelledby=\"form-dialog-title\">\n        <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n                Adding meeting notes...\n            </DialogContentText>\n            <div style={{\n            position: 'relative',\n            display:'flex',\n            width:\"100%\",\n            justifyContent: 'center'\n    \n            }}>\n        \n                <CircularProgress />\n            </div>\n        </DialogContent>\n    </Dialog>)*/\n}\n\n\nexport default AddingMeetingNotesDialog;","/*global chrome*/\n\n\n/**\n * Get data from chrome storage sync via a promise\n */\nexport const getChromeStorageSyncData = (keys) => {\n    return new Promise(\n        resolve => {\n            chrome.storage.sync.get(\n                keys,\n                response => {\n                    console.log(`getChromeStorageSyncData get: ${JSON.stringify(response)}`);\n                    resolve(response);\n                }\n            );\n        }\n    )\n }\n\nexport const setChromeStorageSyncData = data => {\n    return new Promise(\n        resolve => {\n            chrome.storage.sync.set(\n                data,\n                () => {\n                    console.log(`Data set: ${data}`);\n                    resolve();\n                }\n            )  \n        }\n    );\n}\n  \nexport const removeChromeStorageSyncData = (keys) => {\n    return new Promise(\n        resolve => {\n            chrome.storage.sync.remove(\n                keys,\n                () => {\n                    console.log(`Keys removed: ${JSON.stringify(keys)}`);\n                    resolve();\n                }\n            );\n        }\n    )\n}\n\nexport const clearChromeStorageSyncData = () => {\n    return new Promise(\n        resolve => {\n            chrome.storage.sync.clear(\n                () => {\n                    console.log(`Data cleared`);\n                    resolve();\n                }\n            )  \n        }\n    );\n}","/*global chrome*/\nimport React, {useEffect} from 'react';\nimport styled, {css} from 'styled-components'\nimport AddMeetingNotesDialog from './AddMeetingNotesDialog.js'\nimport AddingMeetingNotesDialog from './AddingMeetingNotesDialog.js'\nimport ErrorsDialog from './ErrorsDialog.js'\nimport {getChromeStorageSyncData, setChromeStorageSyncData, clearChromeStorageSyncData, removeChromeStorageSyncData} from './chromeUtils.js'\n\n\nconst AddMeetingNotesButton = ({className, userDomain, meetingDescriptionEl, getMeetingTitle}) => {  \n  const [isAddMeetingNotesDialogOpen, setAddMeetingNotesDialogOpen] = React.useState(false);\n  const [errors, setErrors] = React.useState([]);\n  const [isErrorsDialogOpen, setErrorsDialogOpen] = React.useState(false);\n  const [addingMeetingNotes, setAddingMeetingNotes] = React.useState(false);\n  const [config, setConfig] = React.useState({});\n\n  useEffect(\n    () => {\n      const initializeDefaults = async() => {\n        const defaultConfig = await getChromeStorageSyncData();\n        if(!defaultConfig.sharing) {\n        //if(true) {\n          setConfig(\n            {\n              sharing: {\n                sharingLevel:\"private\",\n                userDomain: userDomain\n              }\n            }\n          );\n        } else {\n          setConfig(\n            defaultConfig\n          );\n        }\n      }\n      initializeDefaults();\n    },[]\n  );\n      \n  const openAddMeetingNotesDialog = async () => {\n    console.log(\"openAddMeetingNotesDialog 1\");\n/*\n    var data; \n    await clearChromeStorageSyncData();\n    data = await getChromeStorageSyncData(null);\n    console.log(`cleared data: ${JSON.stringify(data)}`);\n    await setChromeStorageSyncData({foo:\"bar\", buzz:\"bazz\"});\n    data = await getChromeStorageSyncData(null);\n    console.log(`all data: ${JSON.stringify(data)}`);\n    await removeChromeStorageSyncData(\"buzz\");\n    data = await getChromeStorageSyncData(null);\n    console.log(`removed buzz: ${JSON.stringify(data)}`);\n\n    console.log(`openAddMeetingNotesDialog 1.5: ${JSON.stringify(data)}`);\n    console.log(\"openAddMeetingNotesDialog 2\");*/\n    setAddMeetingNotesDialogOpen(true);\n  };\n\n  const addMeetingNotes = ({sharing, notesTemplateInfo, notesDestinationInfo}) => {\n    const meetingTitle = getMeetingTitle();\n    return new Promise(\n      (resolve, reject) => {\n        chrome.runtime.sendMessage(\n          {\n            type: \"addNotes\",\n            meetingNotesTitle: meetingTitle + \" Notes\",\n            meetingNotesTemplate: notesTemplateInfo,\n            meetingNotesFolder: notesDestinationInfo,\n\n            // google\n            //meetingNotesTemplateId: \"1bAoZmcWXQnofin2esddfdTWB0Ko0MkNJBsQPpS9SZS4\",\n            //meetingNotesFolderId: \" 1TNkioETxxx10b9Ikg0D0bZVbVSnW8XZt\",\n            meetingNotesSharing:sharing\n          }, \n          response => {\n              console.log('addMeetingNotesButton clicked response', response);\n              \n              if(response.meetingNotesDocUrl) {\n                  // console.log(`getMeetingNotesTitle: ${getMeetingNotesTitle()}`);\n                  addNotesDocToMeetingDescription(meetingDescriptionEl, response.meetingNotesDocUrl)\n              } else {\n                const errors = response.errors;\n                console.log(`addMeetingNotes errors: ${JSON.stringify(errors)}`);\n                errors.map(\n                  error => {\n                    console.log(`addMeetingNotes errors foo: ${error.toString()}`);\n                  }\n                )\n                \n                reject(errors);\n              }\n              resolve(response);\n          }\n        )  \n      }\n    );\n  }\n\n\n\n  const handleAddMeetingNotes = async (meetingNotesConfig) => {\n    console.log(`handleAddMeetingNotes 1`);\n    setAddMeetingNotesDialogOpen(false);\n    console.log(`handleAddMeetingNotes 2`);\n    setAddingMeetingNotes(true);\n    console.log(`handleAddMeetingNotes 3`);\n    try{\n      await addMeetingNotes(meetingNotesConfig);\n      // If successful, set the config as the new default\n      setChromeStorageSyncData(meetingNotesConfig);\n\n    }catch(errors){\n      setErrors(errors);\n      console.log(`handleAddMeetingNotes errors: ${JSON.stringify(errors)}`);\n      setAddingMeetingNotes(false);\n      console.log(`handleAddMeetingNotes 2`);\n\n      setErrorsDialogOpen(true);\n      console.log(`handleAddMeetingNotes 3`);\n    }\n    finally{\n      setAddingMeetingNotes(false);\n    }\n  }\n\n  const handleErrorsDialogClose = () => {\n    setErrorsDialogOpen(false);\n  }\n\n  return (\n    <div>\n      <button \n        id=\"add_meeting_notes_button\" \n        onClick={openAddMeetingNotesDialog}\n        class={className}>Add Meeting Notes\n      </button>\n      <AddingMeetingNotesDialog open={addingMeetingNotes}/>\n      <ErrorsDialog title={\"Error creating meeting notes\"} open={isErrorsDialogOpen} onClose={handleErrorsDialogClose} errors={errors}/>\n      <AddMeetingNotesDialog \n        defaultSharingLevel={config.sharing?config.sharing.sharingLevel:\"\"} \n        defaultNotesTemplateInfo={config.notesTemplateInfo}\n        defaultNotesDestinationInfo={config.notesDestinationInfo}\n        userDomain={userDomain} \n        open={isAddMeetingNotesDialogOpen} \n        setOpen={setAddMeetingNotesDialogOpen} \n        addMeetingNotes={handleAddMeetingNotes}\n      />\n    </div>\n  )\n};\n\n\nconst getAddDescriptionDiv = () => {\n  var nodeList = document.querySelectorAll(\"div[jsname='V67aGc']\");\n  if(nodeList && nodeList[0]) {\n      console.log(`foo: ${JSON.stringify(nodeList[0])}`)\n      return nodeList[0];\n  }\n}\n\nconst removeAddDescriptionDiv = () => {\n  const addDescriptionDiv = getAddDescriptionDiv();\n  \n  if(addDescriptionDiv) {\n      console.log(`addDescriptionDiv: ${addDescriptionDiv}`);\n      addDescriptionDiv.remove();\n  }\n}\n\nconst addNotesDocToMeetingDescription = (meetingDescriptionEl, meetingNotesDocUrl) => {\n  removeAddDescriptionDiv();\n\n  meetingDescriptionEl.insertAdjacentHTML('afterbegin', \n  `<div>Meeting Notes: <a id='foo' href='${meetingNotesDocUrl}&meetingNotesExt='true'>${meetingNotesDocUrl}</a><div>`  \n  );\n}\n\n\n\nconst StyledAddMeetingNotesButton = styled(AddMeetingNotesButton)`\n    display: inline-block;\n    color: rgb(255, 255, 255);\n    background-color: rgb(14, 114, 237);\n    line-height: 36px;\n    font-family: \"Google Sans\", Roboto, Helvetica, Arial, sans-serif;\n    font-weight: 500;\n    font-size: 14px;\n    border-width: 0px;\n    border-style: initial;\n    border-color: initial;\n    border-image: initial;\n    padding: 0px 16px;\n    border-radius: 4px;\n\n\n    &:hover {\n        background-color: rgb(66, 133, 244);\n        cursor: pointer;\n      }\n\n    &:disabled {\n        background-color: grey;\n    }\n`;\n\nexport default StyledAddMeetingNotesButton;\n","/*global chrome*/\n\nimport React from 'react';\nimport AddMeetingNotesButton from './AddMeetingNotesButton.js'\n\n \nconst AddMeetingNotesButtonContainer = props => \n    <div id={props.buttonContainerId} class=\"FrSOzf\">\t\n        <div aria-hidden=\"true\" class=\"tzcF6\">\n            <span class=\"DPvwYc uSx8Od\" aria-hidden=\"true\">\n                <div>\n                    <img alt=\"\" aria-hidden=\"true\" src={chrome.runtime.getURL(\"google-doc-128.png\")} class=\"I6gAld\"/>\n                </div>\n            </span>\n        </div>\n        <div class=\"j3nyw\">\n            <AddMeetingNotesButton {...props}/>\n        </div>\n    </div>\n \nexport default AddMeetingNotesButtonContainer;","import React from 'react';\nimport AddMeetingNotesButtonContainer from './AddMeetingNotesButtonContainer.js'\nimport './App.css';\n\nconst App = props => {\n  return (\n    <AddMeetingNotesButtonContainer {...props}/>\n  )\n  \n}\n\nexport default App;\n","/*global chrome*/\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nconst MEETING_NOTES_BUTTON_CONTAINER_REACT_INJECT_EL_ID = \"meeting_notes_button_container_react_injection_el\";\nconst ADD_MEETING_NOTES_BUTTON_CONTAINER_ID = \"ADD_MEETING_NOTES_BUTTON_CONTAINER_ID\";\n\n/**\n * Get the element where the react meeting notes button container will be injected\n */\n\nconst getMeetingNotesButtonContainerReactInjectionEl = () => {\n  return document.getElementById(MEETING_NOTES_BUTTON_CONTAINER_REACT_INJECT_EL_ID);\n}\n\nconst getUserEmail = () => {\n  return document.getElementById(\"xOrgEmail\").textContent;\n}\n\nconst getUserDomain = () => {\n  const userEmail = getUserEmail();\n  return userEmail.substring(userEmail.lastIndexOf(\"@\")+1);\n}\n\n/**\n * Inserts the element where the meeting notes button container react component will be added\n * \n * @param {*} meetingNotesButtonContainerReactInjectionElParent \n */\nconst insertMeetingNotesButtonContainerReactInjectionEl = (meetingNotesButtonContainerReactInjectionElParent) => {\n  console.log(`insertMeetingNotesButtonContainerReactInjectionEl`);\n  \n  meetingNotesButtonContainerReactInjectionElParent.insertAdjacentHTML(\n    'afterbegin', \n    `<div id='${MEETING_NOTES_BUTTON_CONTAINER_REACT_INJECT_EL_ID}'/>` \n  );\n}\n\nconst getEventDetailsTabPanelEl = () => {\n  return document.getElementById(\"tabEventDetails\");\n}\n\nconst getAddMeetingNotesButtonContainerEl = () => {\n  return document.getElementById(ADD_MEETING_NOTES_BUTTON_CONTAINER_ID);\n}\n\nconst hasMeetingNotes = () => {\n  var nodeList = document.querySelectorAll(\"a[href*='meetingNotesExt']\");\n  if(nodeList && nodeList[0]) {\n      return true;\n  } else {\n    return false;\n  }\n}\n\nconst getMeetingTitle = () => {\n  return document.getElementById(\"xTiIn\").getAttribute(\"data-initial-value\")\n}\n\nconst insertReactAddMeetingNotesButtonContainer = (injectionEl, meetingDescriptionEl) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App meetingDescriptionEl={meetingDescriptionEl} userDomain={getUserDomain()} getMeetingTitle={getMeetingTitle} buttonContainerId={ADD_MEETING_NOTES_BUTTON_CONTAINER_ID}/>\n    </React.StrictMode>,\n    injectionEl\n  );\n}\n\nconst getMeetingDescriptionEl = () => {\n  var nodeList = document.querySelectorAll(\"div[id*='T2Ybvb']\");\n  if(nodeList && nodeList[0]) {\n      return nodeList[0];\n  }\n}\n\n\n/**\n * Document mutation obeserver\n */\nvar observer = new MutationObserver(\n  (mutations) => {  \n      mutations.forEach(\n        () => {\n          // console.log(\"mutation\");\n\n            // Look for the meeting details element \n            const meetingDescriptionEl = getMeetingDescriptionEl();\n\n            // If the react injection point doesn't exist yet...\n            if( !getMeetingNotesButtonContainerReactInjectionEl() ) {\n              \n              // Look for the event details tab panel element \n              const eventDetailsTabPanelEl = getEventDetailsTabPanelEl();\n\n              // if the event details panel and meeting description element exist\n              if( eventDetailsTabPanelEl && meetingDescriptionEl) {\n  \n\n                console.log(`domain: ${getUserDomain()}`);\n\n                // Insert it\n                const addMeetingNotesButtonContainerReactInjectionEl = insertMeetingNotesButtonContainerReactInjectionEl(eventDetailsTabPanelEl)\n\n                // Insert the react meeting notes button container\n                insertReactAddMeetingNotesButtonContainer( \n                  getMeetingNotesButtonContainerReactInjectionEl(),\n                  meetingDescriptionEl\n                );  \n              }\n            } else {\n              if( hasMeetingNotes() && isAddMeetingNotesButtonVisible() ) {\n                  hideAddMeetinNotesButton();\n              } else if( !hasMeetingNotes() && !isAddMeetingNotesButtonVisible()) {\n                  showAddMeetinNotesButton();\n              }\n            }\n          } \n      )\n  }    \n);\n\nconst isAddMeetingNotesButtonVisible = () => {\n  return getAddMeetingNotesButtonContainerEl().style.display != \"none\";\n}\n\nconst hideAddMeetinNotesButton = () => {\n  getAddMeetingNotesButtonContainerEl().style.display = \"none\";\n}\n\nconst showAddMeetinNotesButton = () => {\n  getAddMeetingNotesButtonContainerEl().style.display = \"\";\n}\n\n\n/**\n * For now, disable the escape key so the meeting details window doesn't get closed\n * out from underneath the dialog. TODO: Should do this conditionally so if the extension\n * dialogs aren't shown, then escape key works\n */\nwindow.addEventListener(\"keydown\", function(event) {\n    if(event.keyCode === 27){ // Escape key\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      event.cancelBubble = true;\n    }\n  }, true\n)\n\nconst target = document.querySelector(\"body\");\nconst config = { childList:true, subtree:true};\n\n/**\n * Observe all mutations to the DOM body\n * TODO: Optimize this later if necessary\n */\n\nobserver.observe(target, config);"],"sourceRoot":""}